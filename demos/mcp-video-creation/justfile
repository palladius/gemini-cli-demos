
#import '~/git/gic/justfile.gemini_common'

import 'justfile.ai_cinema'
# PATH := ~/go/bin:$(PATH)

# List all available recipes
list:
    just -l


# https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/blob/main/experiments/mcp-genmedia/mcp-genmedia-go/README.md
# Tests local installation of MCP Golang Imagen client
[group: 'aicinema_test']
test-mcp:
    echo '{"jsonrpc":"2.0","method":"prompts/get","id":2,"params":{"name":"generate-image","arguments":{"prompt":"a futuristic cityscape at sunset"}}}' | mcp-imagen-go | jq .

# Tests local installation of MCP Golang Chirp client
[group: 'aicinema_test']
test-chirp:
    @if ! command -v mcp-chirp3-go &> /dev/null; then \
        echo "mcp-chirp3-go not found in PATH."; \
        echo "Please install it from https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/blob/main/experiments/mcp-genmedia/mcp-genmedia-go/README.md"; \
        exit 1; \
    fi
    @echo "mcp-chirp3-go found, generating audio..."
    @echo '{"jsonrpc":"2.0","method":"prompts/get","id":2,"params":{"name":"generate-speech","arguments":{"text_to_speech":"I love justfiles!"}}}' | mcp-chirp3-go | jq .



# Launch gemini with bucket baked in
gemini-with-go:
    #!/bin/bash
    set -euo pipefail
    . .env
    export PATH=~/go/bin/:$PATH
    gemini -c -y --allowed-tools WebFetchTool,ChirpTool,ImagenTool,LyriaTool,VeoTool

# Dangerous, but should be fine while generating audio video locally.
gemini-with-go-yolo:
    #!/bin/bash
    set -euo pipefail
    . .env
    export PATH=~/go/bin/:$PATH
    gemini -c -y --session-summary .gemini/summaries/$(date +%Y%m%d-%H%M%S)-session-summary.txt

# enable `imagen_t2i` Tool

# Authenticate properly
auth:
    bin/gcloud-auth

# Checks if go MCP scripts have been installed
check-install:
    echo '1. Checking MCP Go installations...'
    ls -al ~/go/bin/mcp-*-go
    echo '1. Checking gcloud auth by issuing a simple list command..'
    gcloud auth list

# Runs Imagen MCP on net transport
[group: 'aicinema_test']
run-imagen-mcp-on-port-8080:
    PATH=~/go/bin/:$PATH PROJECT_ID=ricc-genai PORT=8080 mcp-imagen-go -transport http

# Checks gemini-cli works with MCP
[group: 'aicinema_test']
test-mcp-end2end:
    PATH=~/go/bin/:$PATH gemini -c --allowed-tools ChirpTool -p 'Show me Chirp voices through MCP tool, for instance the Italian female voices'

# Generates the audio story for CUJ01 - Story+Audio+CoverImage
test-cuj01:
    cat doc/CUJs/CUJ01-Seby-audio-story.md | PATH=~/go/bin/:$PATH gemini -y --allowed-tools ChirpTool,ImagenTool,LyriaTool,VeoTool,WebFetchTool -p

# Showcasing the auto-extraction of frames from a video
[group: 'demo']
extract-frames-demo:
    bin/extract_frames.py stories/20250911-1230-CUJ03-rubycon-pitch/scene4_final.mp4


[group: 'demo']
add-random-title-to-video:
    SECONDS_START=1 SECONDS_END=3 ./bin/add-title-small-bottom-center stories/audio_stories/20250912_1310_spooky_story_for_seby/veo-veo-3.0-generate-preview-20250912-131653-0.mp4 "My Justfile Title on $(date +%Y%m%d-%H%M%S)"

# TODO ricc move to SHARED one
install-extension:
    gemini extensions install https://github.com/google-gemini/gemini-cli-security
    gemini extensions list
    gemini extensions update --all

assemble-sample-video:
    bin/assemble_video.py stories/20250911-1230-CUJ03-rubycon-pitch/video_plan.yaml

# Installs dependencies on MacOS
[group: 'dependencies']
[macos]
install:
    brew install ffmpeg
    ffmpeg -version

# Installs dependencies on Linux
[group: 'dependencies']
[linux]
install:
    sudo apt update
    sudo apt install ffmpeg
    ffmpeg -version


[group: 'aicinema_test']
[group: 'commands']
gemini-check-install:
    gemini -c -y -p '/aicinema:check_install'

# gemini-aicinema-generate-audio-story-for-ale:
#     gemini -c -y -p '/aicinema:audio_story Generate a spooky bedtime story for Alessandro'

# Generates a spooky bedtime story for NAME
[group: 'aicinema']
[group: 'commands']
gemini-aicinema-generate-audio-story-for NAME:
    gemini -c -y -p '/aicinema:audio_story Generate a spooky bedtime story for {{NAME}}'


[group: 'aicinema_test']
[group: 'commands']
gemini-check-auth:
    echo 1. Checking mcp-chirp3-go installation...
    which mcp-chirp3-go || echo 'mcp-chirp3-go not found in PATH - this will FAIL!'
    echo 2. checking its authenticated: his will fail with auth issues if it fails.
    timeout 7 ~/go/bin/mcp-chirp3-go
    gemini -c -y -p 'Ensure mcp-chirp3-go is installed and in PATH. Then use MCP Chirp model to generate an audio file which says "I love justfiles!" If fails, suggest next fixing steps.'


# ffmpeg v8 transcribe through whisper in local!!
test-transcription:
    echo 0. Remember to install on Mac  brew install whisper-cpp and more. See doc/bug/ for more info.
    echo 1. Calling ffmpeg8 transcription, be patient...
    bin/transcribe-video.sh stories/20250911-1230-CUJ03-rubycon-pitch/scene2_final.mp4
    echo 2. Testing output:
    cat stories/20250911-1230-CUJ03-rubycon-pitch/scene2_final_transcription.txt


gemini-might-not-work:
    echo "ðŸ‘€ Riccardo remember to authenticate BEFORE running Gemini or MCP wont work!"
    PATH=$PATH:~/go/bin gemini -c -y
gemini-demo:
    #echo "ðŸ‘€ Riccardo remember to authenticate BEFORE running Gemini or MCP wont work!"
    just auth
    PATH=$PATH:~/go/bin gemini -c -y
