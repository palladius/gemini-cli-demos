
# 13sep25 v1.2 Added an additional step 8. when chirp doesnt work


description = "[AICinema] Check if GoLang installation was done correctly."

prompt = """
# Check MCP Veo Go Installation

## Instructions

1. Check if the `mcp-veo-go` tool is installed correctly by running the following command in your terminal:

```bash
ls ~/go/bin/mcp-*
# Expected:
mcp-avtool-go  mcp-gemini-go  mcp-lyria-go
mcp-chirp3-go  mcp-imagen-go  mcp-veo-go
```

2. Check if its in the local path. If not, add it to your PATH environment variable:

```bash
export PATH=$PATH:~/go/bin
```

3. Confirm ENV variables:

```bash
echo "PROJECT_ID: $PROJECT_ID"
echo "GENMEDIA_BUCKET: $GENMEDIA_BUCKET"
```

Note these are NOT strictly needed. Gemini needs them either in ENV or in `.gemini/settings.json`. (see step 4)

3. Verify the `.gemini/settings.json` is set up correctly with your Google Cloud project and authentication details.

4. Ensure PROJECT_ID and GENMEDIA_BUCKET are set in either your environment variables or in `.gemini/settings.json`.

5. Check `gcloud` is authenticated by running a very simple `gcloud` command, for example: `gcloud storage buckets list`.
   DO NOT authenticate unless you find its needed (output says "not authenticated" or similar). Auth is a SLOW and expensive
    operation for users, so only do it if needed.

6. Start invoking MCP `list_chirp_voices` to get the list of Chirp voices. This will check end2end that auth works.
   Show a list of italian ones, prepended by italian flag, and appropriate gender emoji for male/female.

7. Finally running a simple CHEAP command, the simplest and funniest way is to say
  "MCP Video creation is installed correctly dear Riccardo" (and maybe something more elaborate, like "I checked X Y and Z") and create a chirp file for it
  and call it "YYYYMMDD_HHMM_it_works.wav". If this works, call some sort of `open it_works.wav` to play the file in the local computer
  system (Mac / Linux / windows might have different ways to invoke this).

8. Another thing to try is the auth from the GO fails. Calling the blocking chirp MCP for a few seconds can help:
   `timeout 7 ~/go/bin/mcp-chirp3-go`. If it works, it will stay on forever - no error. But if it fails, it will error out
   in a few seconds.

9. If all the above works, except the two chirps, we can further troubleshoot by trying a DIFFERENT tool, like
   `mcp-imagen-go` to generate a simple image, or Lyria to generate a simple music. This will help us figure out if the
   problem is MCP / golang binaries, or just chirp.

If it doesn't work, use your troubleshooting abilities to suggest fixes: authentication, PATH issues, ENV issues, changing the model region, etc.

If anything goes wrong, installation and code are under https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/blob/main/experiments/mcp-genmedia/README.md

"""

